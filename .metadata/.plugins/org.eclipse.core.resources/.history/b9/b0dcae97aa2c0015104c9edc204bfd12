package GetTaskTrackers;
import java.net.InetSocketAddress;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.mapred.JobClient;
import org.apache.hadoop.mapred.JobID;
import org.apache.hadoop.mapred.RunningJob;
import org.apache.hadoop.mapred.TaskCompletionEvent;
import org.apache.hadoop.mapred.TaskID;
import org.apache.hadoop.mapred.TaskReport;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;

public class CallTaskTrackers implements Tool{

	public static String jobID;
	public static int killratio;
	Map<String,TaskReport> tasks = new Hashmap<String, TaskReport>();
	public Configuration getConf() {
		// TODO Auto-generated method stub
		return null;
	}

	public void setConf(Configuration arg0) {
		// TODO Auto-generated method stub

	}

	public int run(String[] args) throws Exception {
		// TODO Auto-generated method stub
		jobID = args[0];
		killratio= Integer.parseInt(args[1]);
		JobClient theJobClient = new JobClient(new InetSocketAddress("10.2.0.94", 8088), new Configuration());
		@SuppressWarnings("deprecation")
		
		RunningJob theJob = theJobClient.getJob(jobID); // caution, deprecated
		JobID j_id = theJob.getID();
		TaskReport[] tr = theJobClient.getMapTaskReports(j_id);
		for (TaskReport trep : tr){
			System.out.println("TaskID: " + trep.getTaskId()+"Start Time: " + trep.getStartTime()+ "Progres:" + (float)trep.getProgress());

			
			
		
		}
		
		TaskCompletionEvent[] taskcompletionevents = theJob.getTaskCompletionEvents(0);
		int num_tasks = taskcompletionevents.length;
		if(num_tasks==0){
			System.out.println("There are no tasks running atm!!");
		}
/*		This Block Just gives the current running tasks.
 * 		else{
			
			for(TaskCompletionEvent t : taskcompletionevents){
				System.out.println("Task ID: "+t.getTaskId() + "Task Attempt ID: " + t.getTaskAttemptId() + "Task Status" + t.getTaskStatus() + "Task Time: " + t.getTaskRunTime());
			}
		}
		
	*/	
		
		return 0;
	}
	public static void main(String args[]) throws Exception{
		int exitCode = ToolRunner.run(new CallTaskTrackers(), args);
		System.exit(exitCode);
	}

}
